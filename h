[33mcommit 93362c2bbb767c4bd3502188c54950ddc35b0039[m
Author: Nianzhong.Sun <47408714@qq.com>
Date:   Sun Jun 9 23:51:45 2013 +0800

    Upload code.

[1mdiff --git a/.gitattributes b/.gitattributes[m
[1mnew file mode 100644[m
[1mindex 0000000..412eeda[m
[1m--- /dev/null[m
[1m+++ b/.gitattributes[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m# Auto detect text files and perform LF normalization[m
[32m+[m[32m* text=auto[m
[32m+[m
[32m+[m[32m# Custom for Visual Studio[m
[32m+[m[32m*.cs     diff=csharp[m
[32m+[m[32m*.sln    merge=union[m
[32m+[m[32m*.csproj merge=union[m
[32m+[m[32m*.vbproj merge=union[m
[32m+[m[32m*.fsproj merge=union[m
[32m+[m[32m*.dbproj merge=union[m
[32m+[m
[32m+[m[32m# Standard to msysgit[m
[32m+[m[32m*.doc	 diff=astextplain[m
[32m+[m[32m*.DOC	 diff=astextplain[m
[32m+[m[32m*.docx diff=astextplain[m
[32m+[m[32m*.DOCX diff=astextplain[m
[32m+[m[32m*.dot  diff=astextplain[m
[32m+[m[32m*.DOT  diff=astextplain[m
[32m+[m[32m*.pdf  diff=astextplain[m
[32m+[m[32m*.PDF	 diff=astextplain[m
[32m+[m[32m*.rtf	 diff=astextplain[m
[32m+[m[32m*.RTF	 diff=astextplain[m
[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..b9d6bd9[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,215 @@[m
[32m+[m[32m#################[m
[32m+[m[32m## Eclipse[m
[32m+[m[32m#################[m
[32m+[m
[32m+[m[32m*.pydevproject[m
[32m+[m[32m.project[m
[32m+[m[32m.metadata[m
[32m+[m[32mbin/[m
[32m+[m[32mtmp/[m
[32m+[m[32m*.tmp[m
[32m+[m[32m*.bak[m
[32m+[m[32m*.swp[m
[32m+[m[32m*~.nib[m
[32m+[m[32mlocal.properties[m
[32m+[m[32m.classpath[m
[32m+[m[32m.settings/[m
[32m+[m[32m.loadpath[m
[32m+[m
[32m+[m[32m# External tool builders[m
[32m+[m[32m.externalToolBuilders/[m
[32m+[m
[32m+[m[32m# Locally stored "Eclipse launch configurations"[m
[32m+[m[32m*.launch[m
[32m+[m
[32m+[m[32m# CDT-specific[m
[32m+[m[32m.cproject[m
[32m+[m
[32m+[m[32m# PDT-specific[m
[32m+[m[32m.buildpath[m
[32m+[m
[32m+[m
[32m+[m[32m#################[m
[32m+[m[32m## Visual Studio[m
[32m+[m[32m#################[m
[32m+[m
[32m+[m[32m## Ignore Visual Studio temporary files, build results, and[m
[32m+[m[32m## files generated by popular Visual Studio add-ons.[m
[32m+[m
[32m+[m[32m# User-specific files[m
[32m+[m[32m*.suo[m
[32m+[m[32m*.user[m
[32m+[m[32m*.sln.docstates[m
[32m+[m
[32m+[m[32m# Build results[m
[32m+[m
[32m+[m[32m[Dd]ebug/[m
[32m+[m[32m[Rr]elease/[m
[32m+[m[32mx64/[m
[32m+[m[32mbuild/[m
[32m+[m[32m[Bb]in/[m
[32m+[m[32m[Oo]bj/[m
[32m+[m
[32m+[m[32m# MSTest test Results[m
[32m+[m[32m[Tt]est[Rr]esult*/[m
[32m+[m[32m[Bb]uild[Ll]og.*[m
[32m+[m
[32m+[m[32m*_i.c[m
[32m+[m[32m*_p.c[m
[32m+[m[32m*.ilk[m
[32m+[m[32m*.meta[m
[32m+[m[32m*.obj[m
[32m+[m[32m*.pch[m
[32m+[m[32m*.pdb[m
[32m+[m[32m*.pgc[m
[32m+[m[32m*.pgd[m
[32m+[m[32m*.rsp[m
[32m+[m[32m*.sbr[m
[32m+[m[32m*.tlb[m
[32m+[m[32m*.tli[m
[32m+[m[32m*.tlh[m
[32m+[m[32m*.tmp[m
[32m+[m[32m*.tmp_proj[m
[32m+[m[32m*.log[m
[32m+[m[32m*.vspscc[m
[32m+[m[32m*.vssscc[m
[32m+[m[32m.builds[m
[32m+[m[32m*.pidb[m
[32m+[m[32m*.log[m
[32m+[m[32m*.scc[m
[32m+[m
[32m+[m[32m# Visual C++ cache files[m
[32m+[m[32mipch/[m
[32m+[m[32m*.aps[m
[32m+[m[32m*.ncb[m
[32m+[m[32m*.opensdf[m
[32m+[m[32m*.sdf[m
[32m+[m[32m*.cachefile[m
[32m+[m
[32m+[m[32m# Visual Studio profiler[m
[32m+[m[32m*.psess[m
[32m+[m[32m*.vsp[m
[32m+[m[32m*.vspx[m
[32m+[m
[32m+[m[32m# Guidance Automation Toolkit[m
[32m+[m[32m*.gpState[m
[32m+[m
[32m+[m[32m# ReSharper is a .NET coding add-in[m
[32m+[m[32m_ReSharper*/[m
[32m+[m[32m*.[Rr]e[Ss]harper[m
[32m+[m
[32m+[m[32m# TeamCity is a build add-in[m
[32m+[m[32m_TeamCity*[m
[32m+[m
[32m+[m[32m# DotCover is a Code Coverage Tool[m
[32m+[m[32m*.dotCover[m
[32m+[m
[32m+[m[32m# NCrunch[m
[32m+[m[32m*.ncrunch*[m
[32m+[m[32m.*crunch*.local.xml[m
[32m+[m
[32m+[m[32m# Installshield output folder[m
[32m+[m[32m[Ee]xpress/[m
[32m+[m
[32m+[m[32m# DocProject is a documentation generator add-in[m
[32m+[m[32mDocProject/buildhelp/[m
[32m+[m[32mDocProject/Help/*.HxT[m
[32m+[m[32mDocProject/Help/*.HxC[m
[32m+[m[32mDocProject/Help/*.hhc[m
[32m+[m[32mDocProject/Help/*.hhk[m
[32m+[m[32mDocProject/Help/*.hhp[m
[32m+[m[32mDocProject/Help/Html2[m
[32m+[m[32mDocProject/Help/html[m
[32m+[m
[32m+[m[32m# Click-Once directory[m
[32m+[m[32mpublish/[m
[32m+[m
[32m+[m[32m# Publish Web Output[m
[32m+[m[32m*.Publish.xml[m
[32m+[m[32m*.pubxml[m
[32m+[m
[32m+[m[32m# NuGet Packages Directory[m
[32m+[m[32m## TODO: If you have NuGet Package Restore enabled, uncomment the next line[m
[32m+[m[32m#packages/[m
[32m+[m
[32m+[m[32m# Windows Azure Build Output[m
[32m+[m[32mcsx[m
[32m+[m[32m*.build.csdef[m
[32m+[m
[32m+[m[32m# Windows Store app package directory[m
[32m+[m[32mAppPackages/[m
[32m+[m
[32m+[m[32m# Others[m
[32m+[m[32msql/[m
[32m+[m[32m*.Cache[m
[32m+[m[32mClientBin/[m
[32m+[m[32m[Ss]tyle[Cc]op.*[m
[32m+[m[32m~$*[m
[32m+[m[32m*~[m
[32m+[m[32m*.dbmdl[m
[32m+[m[32m*.[Pp]ublish.xml[m
[32m+[m[32m*.pfx[m
[32m+[m[32m*.publishsettings[m
[32m+[m
[32m+[m[32m# RIA/Silverlight projects[m
[32m+[m[32mGenerated_Code/[m
[32m+[m
[32m+[m[32m# Backup & report files from converting an old project file to a newer[m
[32m+[m[32m# Visual Studio version. Backup files are not needed, because we have git ;-)[m
[32m+[m[32m_UpgradeReport_Files/[m
[32m+[m[32mBackup*/[m
[32m+[m[32mUpgradeLog*.XML[m
[32m+[m[32mUpgradeLog*.htm[m
[32m+[m
[32m+[m[32m# SQL Server files[m
[32m+[m[32mApp_Data/*.mdf[m
[32m+[m[32mApp_Data/*.ldf[m
[32m+[m
[32m+[m[32m#############[m
[32m+[m[32m## Windows detritus[m
[32m+[m[32m#############[m
[32m+[m
[32m+[m[32m# Windows image file caches[m
[32m+[m[32mThumbs.db[m
[32m+[m[32mehthumbs.db[m
[32m+[m
[32m+[m[32m# Folder config file[m
[32m+[m[32mDesktop.ini[m
[32m+[m
[32m+[m[32m# Recycle Bin used on file shares[m
[32m+[m[32m$RECYCLE.BIN/[m
[32m+[m
[32m+[m[32m# Mac crap[m
[32m+[m[32m.DS_Store[m
[32m+[m
[32m+[m
[32m+[m[32m#############[m
[32m+[m[32m## Python[m
[32m+[m[32m#############[m
[32m+[m
[32m+[m[32m*.py[co][m
[32m+[m
[32m+[m[32m# Packages[m
[32m+[m[32m*.egg[m
[32m+[m[32m*.egg-info[m
[32m+[m[32mdist/[m
[32m+[m[32mbuild/[m
[32m+[m[32meggs/[m
[32m+[m[32mparts/[m
[32m+[m[32mvar/[m
[32m+[m[32msdist/[m
[32m+[m[32mdevelop-eggs/[m
[32m+[m[32m.installed.cfg[m
[32m+[m
[32m+[m[32m# Installer logs[m
[32m+[m[32mpip-log.txt[m
[32m+[m
[32m+[m[32m# Unit test / coverage reports[m
[32m+[m[32m.coverage[m
[32m+[m[32m.tox[m
[32m+[m
[32m+[m[32m#Translations[m
[32m+[m[32m*.mo[m
[32m+[m
[32m+[m[32m#Mr Developer[m
[32m+[m[32m.mr.developer.cfg[m
[1mdiff --git a/RegularExpressionEx.sln b/RegularExpressionEx.sln[m
[1mnew file mode 100644[m
[1mindex 0000000..eaa72ad[m
[1m--- /dev/null[m
[1m+++ b/RegularExpressionEx.sln[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mï»¿[m
[32m+[m[32mMicrosoft Visual Studio Solution File, Format Version 10.00[m
[32m+[m[32m# Visual Studio 2008[m
[32m+[m[32mProject("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RegularExpressionEx", "RegularExpressionEx\RegularExpressionEx.vcproj", "{962342EF-4522-42BD-A6B7-BC8BA790F42B}"[m
[32m+[m[32mEndProject[m
[32m+[m[32mGlobal[m
[32m+[m	[32mGlobalSection(SolutionConfigurationPlatforms) = preSolution[m
[32m+[m		[32mDebug|Win32 = Debug|Win32[m
[32m+[m		[32mRelease|Win32 = Release|Win32[m
[32m+[m	[32mEndGlobalSection[m
[32m+[m	[32mGlobalSection(ProjectConfigurationPlatforms) = postSolution[m
[32m+[m		[32m{962342EF-4522-42BD-A6B7-BC8BA790F42B}.Debug|Win32.ActiveCfg = Debug|Win32[m
[32m+[m		[32m{962342EF-4522-42BD-A6B7-BC8BA790F42B}.Debug|Win32.Build.0 = Debug|Win32[m
[32m+[m		[32m{962342EF-4522-42BD-A6B7-BC8BA790F42B}.Release|Win32.ActiveCfg = Release|Win32[m
[32m+[m		[32m{962342EF-4522-42BD-A6B7-BC8BA790F42B}.Release|Win32.Build.0 = Release|Win32[m
[32m+[m	[32mEndGlobalSection[m
[32m+[m	[32mGlobalSection(SolutionProperties) = preSolution[m
[32m+[m		[32mHideSolutionNode = FALSE[m
[32m+[m	[32mEndGlobalSection[m
[32m+[m[32mEndGlobal[m
[1mdiff --git a/RegularExpressionEx/DFA.cpp b/RegularExpressionEx/DFA.cpp[m
[1mnew file mode 100644[m
[1mindex 0000000..91025ce[m
[1m--- /dev/null[m
[1m+++ b/RegularExpressionEx/DFA.cpp[m
[36m@@ -0,0 +1,385 @@[m
[32m+[m[32m#include "StdAfx.h"[m
[32m+[m[32m#include "DFA.h"[m
[32m+[m
[32m+[m[32mvoid TestMinimizeDFA()[m
[32m+[m[32m{[m
[32m+[m[32m    int                         nSetSize = 5;[m
[32m+[m[32m    list<DFANodeRelation>       lstNodeRelation;[m
[32m+[m[32m    set<int>                    setAcceptingIdx;[m
[32m+[m[32m    list<set<int>>              lstSet;[m
[32m+[m[32m    CDFA                        dfa;[m
[32m+[m
[32m+[m[32m    lstNodeRelation.push_back(DFANodeRelation(0, 'a', 1));[m
[32m+[m[32m    lstNodeRelation.push_back(DFANodeRelation(0, 'b', 2));[m
[32m+[m[32m    lstNodeRelation.push_back(DFANodeRelation(1, 'a', 1));[m
[32m+[m[32m    lstNodeRelation.push_back(DFANodeRelation(1, 'b', 3));[m
[32m+[m[32m    lstNodeRelation.push_back(DFANodeRelation(2, 'a', 1));[m
[32m+[m[32m    lstNodeRelation.push_back(DFANodeRelation(2, 'b', 2));[m
[32m+[m[32m    lstNodeRelation.push_back(DFANodeRelation(3, 'a', 1));[m
[32m+[m[32m    lstNodeRelation.push_back(DFANodeRelation(3, 'b', 4));[m
[32m+[m[32m    lstNodeRelation.push_back(DFANodeRelation(4, 'a', 1));[m
[32m+[m[32m    lstNodeRelation.push_back(DFANodeRelation(4, 'b', 2));[m
[32m+[m
[32m+[m[32m    setAcceptingIdx.insert(4);[m
[32m+[m
[32m+[m[32m    dfa.MinimizeDFA(nSetSize, lstNodeRelation, setAcceptingIdx, lstSet);[m
[32m+[m
[32m+[m[32m    return;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mCDFA::CDFA(void)[m
[32m+[m[32m{[m
[32m+[m[32m    m_pSyntaxNode = NULL;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mCDFA::~CDFA(void)[m
[32m+[m[32m{[m
[32m+[m[32m    m_TreeConstructer.ReleaseNode(m_pSyntaxNode);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mBOOL CDFA::RegExpToDFA(CString strPattern)[m
[32m+[m[32m{[m
[32m+[m[32m    BOOL bRet = FALSE;[m
[32m+[m
[32m+[m[32m    if ("" == strPattern)[m
[32m+[m[32m        goto Exit0;[m
[32m+[m
[32m+[m[32m    if (strPattern == m_strPattern)[m
[32m+[m[32m        return TRUE;[m
[32m+[m
[32m+[m[32m    CHECK_BOOL ( m_TreeConstructer.SetPattern(strPattern) );[m
[32m+[m[32m    CHECK_BOOL ( ConstructDFA() );[m
[32m+[m
[32m+[m[32m    bRet = TRUE;[m
[32m+[m[32mExit0:[m
[32m+[m[32m    return bRet;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mBOOL CDFA::FindRelationNode(list<DFANodeRelation> &lstNodeRelation,[m[41m [m
[32m+[m[32m                            int nIdx, unsigned char ch, int &nMapToIdx)[m
[32m+[m[32m{[m
[32m+[m[32m    list<DFANodeRelation>::iterator it = lstNodeRelation.begin();[m
[32m+[m[32m    for ( ; it != lstNodeRelation.end(); it++)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (it->m_nIdxCur == nIdx && it->m_ch == ch)[m
[32m+[m[32m        {[m
[32m+[m[32m            nMapToIdx = it->m_nIdxNext;[m
[32m+[m[32m            return TRUE;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    return FALSE;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint CDFA::FindIdxInListSet(int nMapToIdx, list<set<int>> &lstSet)[m
[32m+[m[32m{[m
[32m+[m[32m    int i = 0;[m
[32m+[m[32m    for (list<set<int>>::iterator it = lstSet.begin(); it != lstSet.end(); it++, i++)[m
[32m+[m[32m    {[m
[32m+[m[32m        set<int> & setIdx = *it;[m
[32m+[m[32m        for (set<int>::iterator itInt = setIdx.begin(); itInt != setIdx.end(); itInt++)[m
[32m+[m[32m        {[m
[32m+[m[32m            if (nMapToIdx == *itInt)[m
[32m+[m[32m            {[m
[32m+[m[32m                return i;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    return -1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mBOOL CDFA::PartitionGroup(list<set<int>> &lstSet, set<int> &setStates,[m[41m [m
[32m+[m[32m                          list<DFANodeRelation> &lstNodeRelation,[m[41m [m
[32m+[m[32m                          map<int, set<int>> &mapTemp)[m
[32m+[m[32m{[m
[32m+[m[32m    BOOL            bRet            = FALSE;[m
[32m+[m[32m    list<DFANodeRelation>::iterator itRelation;[m
[32m+[m[32m    set<unsigned char>              setChar;[m
[32m+[m[32m    set<int>                        setMapToIdx;[m
[32m+[m
[32m+[m[32m    try[m
[32m+[m[32m    {[m
[32m+[m[32m        // collect each node's translation char in the set[m
[32m+[m[32m        for (set<int>::iterator it = setStates.begin(); it != setStates.end(); it++)[m
[32m+[m[32m        {[m
[32m+[m[32m            for (itRelation = lstNodeRelation.begin(); itRelation != lstNodeRelation.end(); itRelation++)[m
[32m+[m[32m            {[m
[32m+[m[32m                if (itRelation->m_nIdxCur == *it)[m
[32m+[m[32m                {[m
[32m+[m[32m                    setChar.insert(itRelation->m_ch);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        // end collect[m
[32m+[m
[32m+[m[32m        for (set<unsigned char>::iterator it = setChar.begin(); it != setChar.end(); it++)[m
[32m+[m[32m        {[m
[32m+[m[32m            mapTemp.clear();[m
[32m+[m[32m            int nMapToIdx = -1; // indicate map to a dead state, there no translation for this pair of node/char[m
[32m+[m[32m            for (set<int>::iterator itSet = setStates.begin(); itSet != setStates.end(); itSet++)[m
[32m+[m[32m            {[m
[32m+[m[32m                if (FindRelationNode(lstNodeRelation, *itSet, *it, nMapToIdx))[m
[32m+[m[32m                {[m
[32m+[m[32m                    int nIdx = FindIdxInListSet(nMapToIdx, lstSet);[m
[32m+[m[32m                    if (nIdx == -1)[m
[32m+[m[32m                        assert(FALSE);[m
[32m+[m[32m                    mapTemp[nIdx].insert(*itSet);[m
[32m+[m[32m                }[m
[32m+[m[32m                else[m
[32m+[m[32m                    mapTemp[-1].insert(*itSet);[m
[32m+[m[32m            }[m
[32m+[m[32m            if (mapTemp.size() > 1)// had distinguish[m
[32m+[m[32m            {[m
[32m+[m[32m                break;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    catch (...)[m
[32m+[m[32m    {[m
[32m+[m[32m        goto Exit0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    bRet = TRUE;[m
[32m+[m[32mExit0:[m
[32m+[m[32m    return bRet;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mBOOL CDFA::PartitionGroups(list<set<int>> &lstSet, list<DFANodeRelation> &lstNodeRelation)[m
[32m+[m[32m{[m
[32m+[m[32m    BOOL                        bRet   = FALSE;[m
[32m+[m[32m    list<set<int>>::iterator    it     = lstSet.begin();[m
[32m+[m[32m    map<int, set<int>>          mapTemp;[m
[32m+[m
[32m+[m[32m    for ( ; it != lstSet.end(); )[m
[32m+[m[32m    {[m
[32m+[m[32m        mapTemp.clear();[m
[32m+[m[32m        set<int> &setStates = *it;[m
[32m+[m[32m        CHECK_BOOL ( PartitionGroup(lstSet, setStates, lstNodeRelation, mapTemp) );[m
[32m+[m[32m        if (mapTemp.size() > 1)[m
[32m+[m[32m        {[m
[32m+[m[32m            for (map<int, set<int>>::iterator itM = mapTemp.begin(); itM != mapTemp.end(); itM++)[m
[32m+[m[32m            {[m
[32m+[m[32m                try[m
[32m+[m[32m                {[m
[32m+[m[32m                    lstSet.push_back(itM->second);